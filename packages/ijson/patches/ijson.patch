diff --git a/setup.py b/setup.py
index e2c21f7..d3270a1 100644
--- a/setup.py
+++ b/setup.py
@@ -84,38 +84,4 @@ def yajl_present():
             os.remove(fname)
 
 
-def patch_yajl_sources():
-    """Make yajl sources ready for direct compilation against them"""
-    # cp cextern/yajl -R $yajl_sources_copy
-    # mkdir $yajl_sources_copy/yajl
-    # cp $yajl_sources_copy/src/api/*.h $yajl_sources_copy/yajl
-    patched_sources = os.path.join(tempfile.mkdtemp(), 'yajl')
-    shutil.copytree(os.path.join('cextern', 'yajl'), patched_sources)
-    headers_original = os.path.join(patched_sources, 'src', 'api')
-    headers_copy = os.path.join(patched_sources, 'yajl')
-    shutil.copytree(headers_original, headers_copy)
-    return patched_sources
-
-
-extra_sources = []
-extra_include_dirs = []
-libs = ['yajl']
-embed_yajl = os.environ.get('IJSON_EMBED_YAJL', None) == '1'
-if not embed_yajl:
-    have_yajl = yajl_present()
-else:
-    yajl_sources = patch_yajl_sources()
-    extra_sources = sorted(glob.glob(os.path.join(yajl_sources, 'src', '*.c')))
-    extra_sources.remove(os.path.join(yajl_sources, 'src', 'yajl_version.c'))
-    extra_include_dirs = [yajl_sources, os.path.join(yajl_sources, 'src')]
-    libs = []
-if embed_yajl or have_yajl:
-    yajl_ext = Extension('ijson.backends._yajl2',
-                         language='c',
-                         sources=sorted(glob.glob('ijson/backends/yajl2_c/*.c')) + extra_sources,
-                         include_dirs=['ijson/backends/yajl2_c'] + extra_include_dirs,
-                         libraries=libs,
-                         depends=glob.glob('ijson/backends/yajl2_c/*.h'))
-    setupArgs['ext_modules'] = [yajl_ext]
-
 setup(**setupArgs)
